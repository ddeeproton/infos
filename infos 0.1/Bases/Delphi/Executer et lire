
procedure RunDosInMemo(Que:String;EnMemo:TMemo);
   const
      CUANTOBUFFER = 2000;
   var
     Seguridades         : TSecurityAttributes;
     PaLeer,PaEscribir   : THandle;
     start               : TStartUpInfo;
     ProcessInfo         : TProcessInformation;
     Buffer              : Pchar;
     BytesRead           : DWord;
     CuandoSale          : DWord;
     tb                  : PDWord;

     procedure readFromPipe;
     begin
       Repeat
         BytesRead := 0;
         {Llenamos un troncho de la pipe, igual a nuestro buffer}
         PeekNamedPipe(PaLeer, nil, 0, nil, tb, nil);
         if tb^=0 then
           break;
         ReadFile(PaLeer,Buffer[0],CUANTOBUFFER,BytesRead,nil);
         {La convertimos en una string terminada en cero}
         Buffer[BytesRead]:= #0;
         {Convertimos caracteres DOS a ANSI}
         OemToAnsi(Buffer,Buffer);
         EnMemo.Text := EnMemo.text + String(Buffer);
       until (BytesRead < CUANTOBUFFER);
     end;
begin
  With Seguridades do
  begin
    nlength              := SizeOf(TSecurityAttributes);
    binherithandle       := true;
    lpsecuritydescriptor := nil;
  end;
  {Creamos el pipe...}
  if Createpipe (PaLeer, PaEscribir, @Seguridades, 0) then
  begin
    Buffer  := AllocMem(CUANTOBUFFER + 1);
    FillChar(Start,Sizeof(Start),#0);
    start.cb          := SizeOf(start);
    start.hStdOutput  := PaEscribir;
    start.hStdInput   := PaLeer;
    start.hStdError   := PaEscribir;
    start.dwFlags     := STARTF_USESTDHANDLES +
                         STARTF_USESHOWWINDOW;
    start.wShowWindow := SW_HIDE;

    if CreateProcess(nil,
      PChar(Que),
      @Seguridades,
      @Seguridades,
      true,
      NORMAL_PRIORITY_CLASS,
      nil,
      nil,
      start,
      ProcessInfo)
    then
    begin
      {Espera a que termine la ejecucion}
      new(tb);
      repeat
        CuandoSale := WaitForSingleObject( ProcessInfo.hProcess,100);
        readFromPipe;
        Application.ProcessMessages;
      until (CuandoSale <> WAIT_TIMEOUT);
      {Leemos la Pipe}
      dispose(tb);
    end;
    FreeMem(Buffer);
    CloseHandle(ProcessInfo.hProcess);
    CloseHandle(ProcessInfo.hThread);
    CloseHandle(PaLeer);
    CloseHandle(PaEscribir);
   end;
end;


procedure TForm1.Button1Click(Sender: TObject);
begin
  RunDosInMemo('ping.exe 127.0.0.1', Memo1);
end;
